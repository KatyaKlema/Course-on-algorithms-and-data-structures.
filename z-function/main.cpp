#include <iostream>
#include <vector>
using namespace std;
/*
 Дана непустая строка s, длина которой N не превышает 10^6. Будем считать, что элементы строки нумеруются от 1 до N.

Для каждой позиции i символа в строке определим Z-блок как наибольшую подстроку, которая начинается в этой позиции и совпадает с некоторым началом всей строки s. Значением Z-функции Z(i) будем считать длину этого Z-блока. (Заметим, что для первой позиции строки Z-блок совпадает со всей строкой, поэтому Z(1) = N. С другой стороны, если s[i] ≠ s[1], то Z(i) = 0).

Z-функция используется в различных алгоритмах обработки строк. В частности, с её помощью можно быстро решать задачу о поиске вхождения одной строки в другую («поиск по образцу»).

Требуется для всех i от 1 до N вычислить Z(i).
Формат входных данных
Одна строка длины N, 1 ≤ N ≤ 10^6, состоящая из маленьких латинских букв.
Формат результата
N чисел, разделенные пробелами: Z(1), Z(2), ... Z(N)
 Входные данные:
abracadabra
 Результат работы:
11 0 0 1 0 1 0 4 0 0 1
 */
vector<int> Zfunc(string &str) {
    vector<int> z(str.size());
    z[0] = str.size();
    int left = 0, right = 0;
    for (int i = 1; i < str.size(); ++i) {
        if (i > right) {
            z[i] = 0;
        } else {
            z[i] = min(z[i - left], right - i + 1);
        }
        while (i + z[i] < str.size() && str[i + z[i]] == str[z[i]]) {
            ++z[i];
        }
        if (i + z[i] - 1 > right) {
            left = i;
            right = i + z[i] - 1;
        }
    }
    return z;
}

int main(int argc, const char * argv[]) {
    string str;
    cin >> str;
    vector<int> res = Zfunc(str);
    for(auto i : res){
        cout << i << " ";
    }

    return 0;
}